% Testing cases for eeg_pac function.
% Useful guide for the use of different combinations and methods in the
% toolbox
%
% Author:  Ramon Martinez Cancino SCCN/INC, UCSD 2018
%
% Copyright (C) 2018 Martinez Cancino, INC, SCCN
%
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 2 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

%% Parameters

% Signal parameters
fc            = 60;   % Frequency of the carrier wave. Recommended: [60]
fm            = 8;    % Frequency of the modulating wave. Recommended: [60]
max_time      = 7;    % Time of the simulation. Recommended: single trial [6], multiple trials [2]
n_trials      = 200;  % Number of trials. Recommended: single trial [1], multiple trials [1000]
s_rate        = 500;  % Sampling rate. Recommended: single trial [500], multiple trials [250]
padtime       = 0;    % Padding time at the start and end of the signal. 
snrval        = 50;   % Signal to noise ratio. Recommended: [5]
maxshift      = 10;   % Maximum shifts (jitter) injected into the data. Recommended: single trial [1], multiple trials [10]
nsegm         = 5;    % Number of segments in the data. Each segment is a block with our without modulation


% Method parameters                      
nfreqsphase = 3;       % Number of frequencies used for the phase. Recommended: [10]
nfreqsamp   = 2;       % Number of frequencies used for the amplitude. Recommended: [10]
alpha       = 0.05;    % Alpha value used for statistics. If alpha = [] the statistics are not computed.
                       % Recommended: [0.05] (or [] for less computationtime)
compute_mvl = true;    % Compute the Mean Vector Length Modulation Index
compute_kl  = true;    % Compute the Kullback Leibler Modulation Index
compute_glm = true;    % Compute the GLM Modulation Index
phaserange  = 8;       % Range of phases to be used
                       % Recommended: [4 25]
amprange    = 60;      % Range of amplitudes to be used  Recommended: [30 100]
nsurrogate  = 10;      % Number of surrogates. Recommended: [200].
nbinskl     = 18;      % Number of bins for the Kullback Leibler Modulation
                       % index. Recommended: [8]

% Do not modify the code beyond this point
%% Generate 1D data
tlimits      = [0 max_time];
plot_flag    = 1;
[~, data_singletrial,t_outtmp]  = pop_genpac(fc,fm,tlimits,'Ac',5,'Am',1,'srate',s_rate,'cpfunc','block','blockamp',1, 'nsegm',nsegm,'plot_flag', plot_flag,'padtime',padtime,'snr',snrval,'m',1);
%% INSTMIPAC (no surr)
try
mipacvarthreshval =0.002;
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'instmipac',...
                                                         'freqs',          phaserange ,...
                                                         'nfreqs1',        nfreqsphase,...
                                                         'nfreqs2',        nfreqsamp,...
                                                         'freqs2',         amprange,...
                                                         'winsize',        s_rate,...
                                                         'nboot',          nsurrogate,...
                                                         'butterorder',    6, ...
                                                         'mipacvarthresh', mipacvarthreshval,...
                                                         'timefreq',       1,...
                                                         'freqscale',      'linear',...
                                                         'ntimesout',      length(data_singletrial));
    disp(' Successful computation:  INSTMIPAC (no surr)');                                                 
catch
    disp('Error computing:  INSTMIPAC (no surr)');
end
                                                     
%% MVLMI (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'mvlmi',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  MVLMI (no surr)');                                                  
catch
    disp('Error computing:  MVLMI (no surr)');
end
%% GLM (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method',    'glm',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
catch
    disp('Error computing:  GLM (no surr)');
end                                                     
%% KLMI (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'klmi',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  KLMI (no surr)');                                                  
catch
    disp('Error computing:  KLMI (no surr)');
end                                                      
%% INSTMIPAC (surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'instmipac',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  INSTMIPAC (surr)');                                                 
catch
    disp('Error computing:  INSTMIPAC (surr)');
end
%% MVLMI (surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'mvlmi',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  MVLMI (surr)');                                                 
catch
    disp('Error computing:  MVLMI (surr)');
end                                                     
%% GLM (surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method', 'glm',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  GLM (surr)');                                                 
catch
    disp('Error computing:  GLM (surr)');
end                                                     
%% KLMI (surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_singletrial', data_singletrial', s_rate,...
                                                         'method',   'klmi',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...
                                                         'alpha',     alpha ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'nfreqs2',   nfreqsamp,...
                                                         'freqs2',    amprange,...
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', length(data_singletrial));
    disp(' Successful computation:  KLMI (surr)');                                                 
catch
    disp('Error computing:  KLMI (surr)');
end                                                       
%% Generate 2D data
nfreqsphase   = 1;
nfreqsamp     = 1;
tlimits       = [-1 1];
s_rate        = 100; 
snrval        = 10;     

[~, data_pac,t_outtmp]  = pop_genpac(fc,fm,tlimits,'Ac',5,'Am',1,'srate',s_rate,'cpfunc','block','blockamp',1, 'nsegm',nsegm,'plot_flag', plot_flag,'padtime',padtime,'snr',snrval,'m',1,'ntrials',n_trials,'maxshift',10);

%%  MVLMI (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'mvlmi',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                         
                                                         'winsize',   s_rate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  MVLMI (no surr) 2D');                                                  
catch
    disp('Error computing:  MVLMI (no surr) 2D');
end                                                     
%%   MVLMI (w surr)           
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'mvlmi',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...                                                         
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                      
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'tlimits',   tlimits, ...
                                                         'bonfcorr',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  MVLMI (w surr) 2D');                                                  
catch
    disp('Error computing:  MVLMI (w surr) 2D');
end                                                     
%% KLMI (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'klmi',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                         
                                                         'winsize',   s_rate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  KLMI (no surr) 2D');                                                  
catch
    disp('Error computing:  KLMI (no surr) 2D');
end                                                     
%%   KLMI (w surr)           
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'klmi',...
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...                                                         
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                      
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'tlimits',   tlimits, ...
                                                         'bonfcorr',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  KLMI (w surr) 2D');                                                  
catch
    disp('Error computing:  KLMI (w surr) 2D');
end                                                      
%% GLMmi (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'glm',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                         
                                                         'winsize',   s_rate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  GLMmi (no surr) 2D');                                                  
catch
    disp('Error computing:  GLMmi (no surr) 2D');
end                                                     
%%    GLMmi (w surr)          
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'glm',...                                                       
                                                         'alpha',     alpha ,...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                      
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'tlimits',   tlimits, ...
                                                         'bonfcorr',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  GLMmi (w surr)  2D');                                                    
catch
    disp('Error computing:   GLMmi (w surr)  2D');
end                                                     
 %% ERMIPAC (no surr)
 try
 [pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'ermipac',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                      
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'tlimits',   tlimits, ...
                                                         'bonfcorr',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:  ERMIPAC (no surr)  2D');                                                  
catch
    disp('Error computing:   ERMIPAC (no surr)  2D');
end                                                       
  %% ERMIPAC (w surr)
 try
 [pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'ermipac',...
                                                         'alpha',     alpha,... 
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                      
                                                         'winsize',   s_rate,...
                                                         'nboot',     nsurrogate,...
                                                         'timefreq',  1,...
                                                         'tlimits',   tlimits, ...
                                                         'bonfcorr',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));  
   disp(' Successful computation:   ERMIPAC (w surr)  2D');                                                  
catch
    disp('Error computing:   ERMIPAC (w surr)  2D');
end                                                     
%%
%% Compute PAC multiple freqs

phaserange    = [8 712];
amprange      = [60 70];
nfreqsphase   = 3;
nfreqsamp     = 3;

%%  MVLMI (no surr)
try
[pacval, ~, ~, ~, ~, ~,~, pacstruct] = eeg_pac(data_pac, data_pac, s_rate,...
                                                         'method', 'mvlmi',...
                                                         'freqs',     phaserange ,...
                                                         'nfreqs1',   nfreqsphase,...
                                                         'freqs2',    amprange,...
                                                         'nfreqs2',   nfreqsamp,...                                                         
                                                         'winsize',   s_rate,...
                                                         'timefreq',  1,...
                                                         'freqscale', 'linear',...
                                                         'ntimesout', size(data_pac,2));
    disp(' Successful computation:   MVLMI (no surr)  multiple freqs');                                                  
catch
    disp('Error computing:   MVLMI (no surr)  multiple freqs');
end

%% TESTING pop_pac
try
tlimits = [0 7]; 
padtime = 1;
snrval = 20;
EEG  = pop_genpac(fc,fm,tlimits,'Ac',5,'Am',1,'srate',s_rate,'cpfunc','block','blockamp',1, 'nsegm',nsegm,'plot_flag', 1,'padtime',padtime,'snr',snrval,'m',1,'ntrials',1,'nchan',3);

EEG = pop_pac(EEG,'Channels',[4 15],[30 100],[1  2],[1  2],'method','mvlmi',    'nboot',200,'alpha',[],'nfreqs1',6,'nfreqs2',7,'bonfcorr',0,'freqscale', 'linear');
EEG = pop_pac(EEG,'Channels',[4 15],[30 100],[1  2],[1  2],'method','klmi',     'nboot',200,'alpha',[],'nfreqs1',6,'nfreqs2',7,'bonfcorr',0,'freqscale', 'linear');
EEG = pop_pac(EEG,'Channels',[4 15],[30 100],[1  2],[1  2],'method','glm',      'nboot',200,'alpha',[],'nfreqs1',6,'nfreqs2',7,'bonfcorr',0,'freqscale', 'linear');
EEG = pop_pac(EEG,'Channels',[4 15],[30 100],[1  2],[1  2],'method','instmipac','nboot',200,'alpha',[],'nfreqs1',6,'nfreqs2',7,'bonfcorr',0,'freqscale', 'linear');
disp(' Successful computation:   pop_pac.m'); 
catch
    disp('Error computing:   pop_pac.m');
end
